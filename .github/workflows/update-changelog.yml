name: Update CHANGELOG only for changed addon

on:
  pull_request_target:
    paths:
      - '**/config.yaml'
    types: [opened, synchronize]

permissions:
  contents: write

jobs:
  detect-and-update-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # pega hist completo para evitar problemas com branches
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
      
      - name: Detect changed config.yaml
        id: changed
        run: |
          files=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }})
          for f in $files; do
            case "$f" in
              */config.yaml)
                echo "changed_yaml=$f" >> "$GITHUB_OUTPUT"
                ;;
            esac
          done

      # Atenção: só prossegue se tiver config.yaml alterado
      - name: Set addon info
        id: addon
        run: |
          declare -A addons
          addons["wpp-connect-addon"]="wpp-connect-addon/config.yaml|wpp-connect-addon/CHANGELOG.md|wppconnect-team/wppconnect-server"
          addons["frigate-notify-addon"]="frigate-notify-addon/config.yaml|frigate-notify-addon/CHANGELOG.md|0x2142/frigate-notify"

          config_path="${{ steps.changed.outputs.changed_yaml }}"
          if [ -z "$config_path" ]; then
            echo "Nenhum config.yaml alterado. Saindo."
            exit 1
          fi

          addon_dir=$(dirname "$config_path")
          IFS='|' read -r cfg changelog repo <<< "${addons[$addon_dir]}"
          echo "addon_dir=$addon_dir" >> $GITHUB_OUTPUT
          echo "config_path=$cfg" >> $GITHUB_OUTPUT
          echo "changelog_path=$changelog" >> $GITHUB_OUTPUT
          echo "release_repo=$repo" >> $GITHUB_OUTPUT

      - name: Extract new version from config.yaml
        id: extract
        run: |
          version=$(grep 'version:' "${{ steps.addon.outputs.config_path }}" | sed -E 's/version:\s*"([^"]+)".*/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get release info from GitHub
        id: release
        run: |
          VERSION="${{ steps.extract.outputs.version }}"
          if [ -z "$VERSION" ]; then
            echo "No version found. Skipping."
            echo "body=" >> $GITHUB_OUTPUT
            exit 0
          fi
          RELEASE_INFO=$(curl -s -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ steps.addon.outputs.release_repo }}/releases/tags/$VERSION")
          RELEASE_BODY=$(echo "$RELEASE_INFO" | jq -r .body)
          if [ "$RELEASE_BODY" = "null" ] || [ -z "$RELEASE_BODY" ]; then
            echo "body=" >> $GITHUB_OUTPUT
          else
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "$RELEASE_BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Prepend to CHANGELOG.md
        run: |
          VERSION="${{ steps.extract.outputs.version }}"
          if [ -z "$VERSION" ]; then
            echo "No version. Skipping CHANGELOG."
            exit 0
          fi
          DATE=$(date +%Y-%m-%d)
          NEW_CHANGELOG_ENTRY_HEADER="## [$VERSION] - $DATE"
          NEW_CHANGELOG_ENTRY_BODY="${{ steps.release.outputs.body }}"
          if [ ! -f "${{ steps.addon.outputs.changelog_path }}" ]; then
            mkdir -p "$(dirname "${{ steps.addon.outputs.changelog_path }}")"
            touch "${{ steps.addon.outputs.changelog_path }}"
          fi
          {
            echo "$NEW_CHANGELOG_ENTRY_HEADER"
            echo "$NEW_CHANGELOG_ENTRY_BODY"
            echo
            cat "${{ steps.addon.outputs.changelog_path }}"
          } > temp.md
          mv temp.md "${{ steps.addon.outputs.changelog_path }}"

      - name: Commit and push changelog
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file_pattern: ${{ steps.addon.outputs.changelog_path }}
          branch: ${{ github.event.pull_request.head.ref }}
          commit_message: "docs(${{steps.addon.outputs.addon_dir}}): update CHANGELOG for version ${{ steps.extract.outputs.version }}"
        if: steps.extract.outputs.version != ''